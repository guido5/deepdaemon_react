{"version":3,"sources":["assets/img/logo.png","components/navbar.js","components/section.js","components/proyect_card.js","DeepDaemon.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","navigation","react_default","a","createElement","Navbar_default","bg","variant","Container_default","Brand","href","className","Toggle","aria-controls","Nav_default","Link","Section","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","box","push","join","id","children","Component","Proyect_card","_ref","proyects","map","proyect","Card_default","style","width","key","Img","src","front_img","alt","Body","Title","name","Text","short","Button_default","DeepDaemon","navbar","logo","section","Row_default","Col_default","proyect_card","projects_data","Boolean","window","location","hostname","match","ReactDOM","render","src_DeepDaemon","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02ea16ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4e62c623.png\";","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst navigation = () => {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\">\r\n                    <span className=\"icon icon-rocket\"> </span>\r\n                    DeepDaemon\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#about\">Nosotros</Nav.Link>\r\n                    <Nav.Link href=\"#portfolio\">Proyectos</Nav.Link>\r\n                    <Nav.Link href=\"#team\">Equipo</Nav.Link>\r\n                    <Nav.Link href=\"#contact\">Contacto</Nav.Link>\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default navigation;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nclass Section extends Component {\r\n    box = [\"section\"];\r\n    constructor (props) {\r\n        super(props);\r\n        this.box.push(this.props.className);\r\n    }\r\n    render() {\r\n      return (\r\n        <Container className={this.box.join(' ')} id={this.props.id}>\r\n            {this.props.children}\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default Section;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst Proyect_card = ({proyects}) => (  \r\n    <Container className=\"projects_container\">\r\n        {\r\n            proyects.map(proyect =>(\r\n                <Card style={{ width: '18rem' }} key={proyect.key} >\r\n                    <Card.Img variant=\"top\" src={\"assets/img/projects/\"+proyect.front_img} alt={proyect.front_img} />\r\n                    <Card.Body>\r\n                        <Card.Title>{proyect.name}</Card.Title>\r\n                        <Card.Text>\r\n                            {proyect.short}\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Ver más...</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            ))\r\n        }\r\n    </Container>\r\n);\r\n\r\nexport default Proyect_card;","import React from 'react';\nimport logo from './assets/img/logo.png';\nimport './DeepDaemon.css';\nimport Navbar from './components/navbar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/icomoon/icomoon.css'; //https://icomoon.io/#preview-free\nimport Section from './components/section';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport projects_data from './data/projects.json';\nimport Proyects from './components/proyect_card'\n\nfunction DeepDaemon() {\n  return (\n    <div className=\"DeepDaemon\">\n      <Navbar/>\n      <header className=\"dd_header\">\n        <img src={logo} className=\"ddlogo\" alt=\"logo\" />\n        <h1>\n          DeepDaemon\n        </h1>\n        <hr></hr>\n        <h2>\n          Comunidad de conocimiento\n        </h2>\n      </header>\n      <Section id=\"about\">\n        <h1>Un poco sobre nosotros</h1>\n        <hr/>\n        <p>Somos un grupo de trabajo que busca vincular el desarrollo científico con el desarrollo \n          de soluciones industriales para generar tecnología de punta y capital humano de alto \n          impacto en el ámbito académico e industrial.\n        </p>\n      </Section>\n      <Section>\n        <Row>\n          <Col>\n            <span className=\"icon icon-eye \"></span>\n              <h2>Visión</h2>\n              <p>\n                Que el grupo de trabajo y sus integrantes sean un referente a nivel mundial en el\n                desarrollo de tecnologías de punta a nivel científico, académico y comercial, \n                capacitando a capital humano de excelente calidad y desarrollando proyectos con \n                alto impacto comercial y social.\n              </p>\n          </Col>\n          <Col>\n          <span className=\"icon icon-quill\"></span>\n              <h2>Misión</h2>\n              <p>\n                Desarrollar sistemas inteligentes basados en redes neuronales profundas que puedan\n                ser distribuidos a usuarios reales, con el objetivo de favorecer una educación integral\n                a los estudiantes del grupo de trabajo.\n              </p>\n          </Col>\n          <Col>\n            <span className=\"icon icon-heart\"></span>\n            <h2>Valores</h2>\n            <p>\n              Intregridad, Confianza, Comunicaciones honestas y abiertas, Pasión por trabajar para \n              hacer un cambio en el mundo.\n            </p>\n          </Col>\n        </Row>\n      </Section>\n      <div className=\"academy\">\n      <Section className=\"white\"> \n        <h1>La Investigación no solo es académica</h1>\n        <hr/>\n        <p>\n          Por eso creamos un grupo de investigación que tiene como objetivo usar la inteligencia\n          artificial para resolver problemas de la industria.\n        </p>\n      </Section>\n      </div>\n      <Section className=\"portfolio\" id=\"portfolio\">\n        <h1>Proyectos increibles</h1>\n        <hr/>\n        <Proyects proyects={projects_data}/>\n      </Section>\n    </div>\n  );\n};\n\nexport default DeepDaemon;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DeepDaemon from './DeepDaemon.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<DeepDaemon />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}